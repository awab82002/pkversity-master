@page "/search"
@using ClassLibraryDAL
@using ClassLibraryEntities
@inject IJSRuntime js

@using User.Authentication
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager nm


<style>
    .btn{
        border-radius: 0;
    }
    .form-select {
        border-radius: 0;
    }
    .filter{
        margin-bottom: 2rem;
       
        padding-bottom: 1rem;
        padding-top: 1rem;
        border: none;
    }
    .row{
        --bs-gutter-x: 0;
    }
    .color-d {
        background-color: #1a1a97c4;
    }

    .size {
        font-size: 1.5rem;
    }

    .font {
        font-size: 2.5rem;
    }

    .font1 {
        font-size: 2.5rem;
    }
</style>


<div>
    <div class="box">
        <div class="mx-auto mt-1">
            <div class="mt-4 filter">
                <div class="row">
                    <div class="col-md-3">                   
                        <div class="form-floating">
                            <select class="form-select" @onchange="_DegOption" id="floatingSelect" aria-label="Floating label select example">
                                <option value="-1" selected>Select Program Degree</option>

                                @foreach (var emp in @PassingDegreeList)
                                {
                                    <option value="@emp.PassingDegreesId">@emp.Title</option>
                                }
                            </select>
                            <label for="floatingSelect">Select Last Program Degree</label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating">
                            <select class="form-select" @bind="@PassingDegreeSGid" id="floatingSelect" aria-label="Floating label select example">
                                <option value="-1" selected>Select Passing Groups</option>

                                @foreach (var emp in @PassingDSGroupsList)
                                {
                                    if (alpha == emp.PassingDegreeId)
                                    {
                                        <option value="@emp.PassingDSGroupsId">@emp.PassingDSGroups</option>
                                    }
                                }
                            </select>
                            <label for="floatingSelect">Select Passing Degree Subject Groups</label>
                        </div>
                       
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating">
                            <select class="form-select" @bind="@perc" id="floatingSelect" aria-label="Floating label select example">
                                <option value="-1" selected>Select Percentage</option>
                                <option value="50">40-45 %</option>
                                <option value="50">45-50 %</option>
                                <option value="50">50-55 %</option>
                                <option value="60">55-60 %</option>
                                <option value="60">60-65 %</option>
                                <option value="60">65-70 %</option>
                            </select>
                            <label for="floatingSelect">Select Percentage</label>
                        </div>
                        
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating">
                            <select @bind="cityID" class="form-select" id="floatingSelect" aria-label="Floating label select example">
                                <option value="-1">Select City</option>

                                @foreach (var emp in @CitiesList)
                                {

                                    <option value="@emp.CityId">@emp.CityName</option>

                                }
                            </select>
                            <label for="floatingSelect">Select City</label>
                        </div>
                       
                    </div>
                    <div class="col-1">
                        <button type="submit" style="height: 3.5rem;" class="btn btn-primary text-white btn-lg" @onclick="Submit">Search</button>
                    </div>

                </div>
            </div>
        </div>

        @if (check)
        {
            <div class="container-fluid mt-5">
                <div class="row">

                    @foreach (var emp in FilterCitiesList)
                    {
                        <div class="col-md-3 mt-4">
                            <div class="card text-dark bg-light shadow mb-3" style="max-width: 18rem;">

                                <div class="card-body">
                                    <div class="h4">@emp.Title</div>
                                    <h6 class="card-subtitle mb-2">You are eligible in <b>@emp.Departments </b> Departments</h6>

                                    <button class="btn btn-primary mt-2" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight" @onclick="e=>DepartmentsDetails(emp.InstituteId,emp.Title)">View Details</button>

                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
  
    </div>


</div>

<div class="offcanvas offcanvas-end w-100 canvas-color" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h2 id="offcanvasRightLabel" class="text-black">@Title</h2>
        <button type="button" class="btn-close text-reset " style="Color:White;" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        @if (check1)
        {
            <ViewDetails FilterDepartmentList="FilterDepartmentList"></ViewDetails>

        }

    </div>
</div>

@if (checck)
{
    <MessageComponent CustomMessage="@Message"></MessageComponent>
}


@code {

   
    public bool Data { get; set; } = false;
    public string? value1 { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticatestate { get; set; }
    public bool isloading { get; set; } = false;
    private List<EntPassingDegree>? PassingDegreeList;
    private List<EntPassingDSGroups>? PassingDSGroupsList;
    private List<EntCities>? CitiesList;

    
    public List<EntFilter>? FilterCitiesList { get; set; }

    private List<EntProgramDegreeDetails>? FilterDepartmentList { get; set; }

    public string? Title { get; set; }

    public string? alpha { get; set; }

    public string? PassingDegreeSGid { get; set; }

    public string? cityID { get; set; }

    public bool check  = false;

    public bool check1 = false;

    public bool checck = false;

    public string? perc { get; set; }

    public string? Message { get; set; }

    private EntFilter? _ModelFilter { get; set; } = new EntFilter();


    private void LoadProgramDetails()
    {
        
        this.PassingDegreeList = DALPassingDegree.GetPassingDegrees();
        this.PassingDSGroupsList = DALPassingDSGroups.GetPassingDSGroups();
        this.CitiesList = DalCities.GetCities();
    }
    protected override void OnInitialized()
    {
        
        LoadProgramDetails();
        
    }

    private void _DegOption(ChangeEventArgs e)
    {
        alpha = e.Value as string;

    }

   
    public void Submit()
    {
        Data = true;


        if (PassingDegreeSGid != "-1" && !string.IsNullOrEmpty(PassingDegreeSGid as string) || cityID != "-1" && !string.IsNullOrEmpty(cityID as string) || perc != "-1" && !string.IsNullOrEmpty(perc as string))
        {
            FilterCitiesList = DalFilter.GetDepartmentsbyID(PassingDegreeSGid, cityID, perc);
            check = true;
        }
        else
        {
            Alert();

        }

    }
    private async Task Alert()
    {
        await js.InvokeVoidAsync("alert", "Please select all values");
    }


    private void DepartmentsDetails(string iid, string title)
    {
       
       DisplayGreeting();
     if (value1 != null && value1 != "")
      {
           

        Title = title;
        FilterDepartmentList = DalFilter.GetDepartmentDetailsbyID(PassingDegreeSGid.ToString(), iid);
        check1 = true;
       }
       else
      {
        nm.NavigateTo("/login");
         
       }
              
    }


    private async Task DisplayGreeting()
    {
        var authState = await authenticatestate;
        value1 = $"{authState.User.Identity.Name}";

    }

}
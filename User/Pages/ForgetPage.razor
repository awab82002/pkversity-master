@page "/forgetpage"


@using ClassLibraryDAL
@using ClassLibraryEntities
@using User.Authentication
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager nm

<style>

    .password-container {
        
        position: relative;
    }

        .password-container input[type="password"],
        .password-container input[type="text"] {
            width: 100%;
            padding: 12px 36px 12px 12px;
            box-sizing: border-box;
        }

    .fa-eye-slash {
        position: absolute;
        top: 28%;
        right: 4%;
        cursor: pointer;
        color: lightgray;
    }
</style>

<section class="vh-50">
    <div class="container">
        <div class="d-flex justify-content-center h-100" style="margin-top:2rem">
            <div class="shadow-sm pb-5" style="background-color:white; border-radius:1rem; padding:2rem;">
                <h4 class="text-primary text-center mt-5">Forget Password</h4>
                <form>

                    <!-- Email input -->
                    <div class="form-outline">
                        <input type="email" id="form3Example3" @bind="Email"
                               class="form-control form-control-lg"
                               placeholder="Enter the email" />
                        <label class="form-label" for="form3Example3"> </label>
                    </div>
                    <div class="form-outline">
                        <div class="password-container">
                            <input type="password" id="form3Example4" @bind="Password"
                                   class="form-control form-control-lg"
                                   placeholder="Enter the New Password " />
                            <label class="form-label" for="form3Example4"> </label>
                            <span class='fa fa-eye-slash' onclick="myFunction()"> </span>




                        </div>

                    </div>
                    <div class="form-outline">
                        <div class="password-container">
                            <input type="password" id="form3Example5" @bind="ConfirmPassword"
                                   class="form-control form-control-lg"
                                   placeholder="Enter the New Password " />
                            <label class="form-label" for="form3Example5"> </label>
                            <span class='fa fa-eye-slash' onclick="myFunction1()"> </span>




                        </div>

                    </div>
                    @*<div class="form-outline">
                        <input type="password" id="form3Example5" @bind="ConfirmPassword"
                               class="form-control form-control-lg"
                               placeholder="Enter the Password Again " />
                        <label class="form-label" for="form3Example5"> </label>
                    </div>*@

                    <div class="text-center  mt-4 pt-2">
                        <button type="button" class="btn btn-primary btn-lg"
                                style="padding-left: 12rem; padding-right: 12rem;" @onclick="Authenticate">
                            Search
                        </button>
                        <p class="small fw-bold mt-2 pt-1 mb-0 text-black">
                            Back to Login <a href="login"
                                             class="link-danger text-decoration-none">Login</a>
                        </p>
                        @if (check)
                        {
                            <h6 class="text-danger text-center">@message </h6>
                        }
                    </div>

                </form>
            </div>
        </div>
    </div>
</section>



@code {
    public string? Email { get; set; }
    public bool check = false;
    public string? message { get; set; }
    public string? Password { get; set; }
    public string? ConfirmPassword { get; set; }
    public string? Passwrd { get; set; }
    public string? userid { get; set; }
    private ClassLibraryEntities.EntUserlogin _Model { get; set; } = new ClassLibraryEntities.EntUserlogin();


    public static string EncodePasswordToBase64(string password)
    {
        try
        {
            byte[] encData_byte = new byte[password.Length];
            encData_byte = System.Text.Encoding.UTF8.GetBytes(password);
            string encodedData = Convert.ToBase64String(encData_byte);
            return encodedData;
        }
        catch (Exception ex)
        {
            throw new Exception("Error in base64Encode" + ex.Message);
        }
    }


    public async Task Authenticate()
    {
        if (Password == ConfirmPassword)
        {


            _Model = DALUserLogin.GetUserByName(Email);
            if (_Model.UserId == null)
            {
                check = true;
                message = "Invalid Email . Please Enter Valid Email ";
            }
            else
            {
                userid = _Model.UserId;
                Passwrd = EncodePasswordToBase64(Password);
                DALUserLogin.UpdatePassword(userid, Passwrd);
                check = true;
                message = "Password Updated Successfully";
            }
        }
        else
        {
            check = true;
            message = "Please Enter Same Password in above field  ";
        }



    }


}

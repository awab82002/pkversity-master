@page "/register"
@inject IJSRuntime js
@using ClassLibraryDAL
@using ClassLibraryEntities
@using User.Authentication

@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager nm



<section class="vh-80 container">
    <div class="container">
        <div class="d-flex justify-content-center h-100" style="margin-top:2rem">
            <div class="shadow-sm pb-5" style="background-color:white; border-radius:1rem; padding:2rem;">
                <h4 class="text-primary pb-3 text-center">Register</h4>
                <form>



                    <div class="form-outline">
                        <input @bind="_Model.FirstName" type="text" id="firstName" class="form-control form-control-lg"
                               placeholder="First Name" />
                        <label class="form-label" for="firstName"> </label>
                    </div>




                    <div class="form-outline">
                        <input type="text" @bind="_Model.LastName" id="lastName" class="form-control form-control-lg"
                               placeholder="Last Name" />
                        <label class="form-label" for="lastName"> </label>
                    </div>


                    <div class="form-outline py-1">
                        <input type="email" @bind="_Model.Email" id="emailAddress" class="form-control form-control-lg"
                               placeholder="Enter a valid Email Address" />
                        <label class="form-label" for="emailAddress"> </label>
                    </div>

                    <div class="form-outline">
                        <input type="password" @bind="Password" id="regpassword" class="form-control form-control-lg"
                               placeholder="Enter Password" />
                        <label class="form-label" for="regpassword"> </label>
                    </div>

                    <div class="form-outline">
                        <input type="tel" @bind="_Model.ContactNo" id="phoneNumber" class="form-control form-control-lg"
                               placeholder="Enter Contact Number" />
                        <label class="form-label" for="phoneNumber"> </label>
                    </div>





                    <div class="form-outline datepicker">
                        <input type="text" @bind="_Model.City" class="form-control form-control-lg" id="birthdayDate"
                               placeholder="Enter City" />
                        <label for="birthdayDate" class="form-label"></label>
                    </div>




                    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="femaleGender"
                           value="option1" @onchange="@(() => _Gender("Female"))" />
                    <label class="form-check-label text-dark " for="femaleGender">Female</label>



                    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="maleGender"
                           value="option2" @onchange="@(() => _Gender("Male"))" />
                    <label class="form-check-label text-dark" for="maleGender">Male</label>





                    <div class="text-center  mt-4 pt-2">
                        <button type="button" class="btn btn-primary btn-lg"
                                style="padding-left: 12rem; padding-right: 12rem;" @onclick="SignUp">
                            Register
                        </button>
                        <p class="small fw-bold mt-2 pt-1 mb-0 text-black">
                            If already have an account? <a href="login "
                                                           class="link-danger text-decoration-none">Login</a>
                        </p>

                    </div>
                     </form>
            </div>
        </div>
       
    </div>
    
</section>
@code {
    public string? EncPass { get; set; }
    public string? Password { get; set; }
    public string? Gender { get; set; }
    private ClassLibraryEntities.EntUserlogin _Model { get; set; } = new ClassLibraryEntities.EntUserlogin();


    public static string EncodePasswordToBase64(string password)
    {
        try
        {
            byte[] encData_byte = new byte[password.Length];
            encData_byte = System.Text.Encoding.UTF8.GetBytes(password);
            string encodedData = Convert.ToBase64String(encData_byte);
            return encodedData;
        }
        catch (Exception ex)
        {
            throw new Exception("Error in base64Encode" + ex.Message);
        }
    }

    private void SignUp()
    {
        EncPass = EncodePasswordToBase64(Password);
        _Model.Password = EncPass;
        _Model.Gender = Gender;
        _Model.Role = "User";
        DALUserLogin.SaveSignUp(_Model);
        nm.NavigateTo("/login");
    }

    public void _Gender(string gender)
    {
        Gender = gender;
    }
}